version: "2.4"
services:
  mysql:
    image: mysql:5.7
    mem_limit: "1g"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: "%"

  redis:
    image: redis
    mem_limit: "500m"

  aws:
    image: localstack/localstack:0.12.19.1
    mem_limit: "500m"
    environment:
      EDGE_PORT: "3040"
      SERVICES: "s3,dynamodb,secretsmanager,es"
      HOSTNAME: "aws"
      HOSTNAME_EXTERNAL: "aws"
    ports:
      - 3040:3040
      - 4566:4566
      - 4571:4571

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    ports:
      - 5601:5601

  setup:
    image: exercism/setup
    mem_limit: "250m"
    build:
      context: ./setup
      dockerfile: dev.Dockerfile
    depends_on:
      - aws
    environment:
      - EXERCISM_DOCKER=true
      - EXERCISM_ENV=development

  website:
    image: exercism/website
    stop_grace_period: 1s
    build:
      context: ../website
      dockerfile: dev.Dockerfile
    depends_on:
      - mysql
      - redis
      - aws
      - setup
    environment:
      - LANGUAGE_SERVER_HOST=ws://local.exercism.io:3023
      - DB_HOST=mysql
      - EXERCISM_ENV=development
      - EXERCISM_DOCKER=true
      - OVERMIND_SOCKET=/usr/src/app/tmp/overmind.sock
    ports:
      - 3020:3020
      - 9999:3035
      - 9998:3334
    volumes:
      - ../website:/usr/src/app
      - "./tmp/exercism:/tmp/exercism"
      - /usr/src/app/node_modules
      - type: tmpfs
        target: /usr/src/app/tmp

  tooling-orchestrator:
    image: exercism/tooling-orchestrator
    mem_limit: "250m"
    build:
      context: ../tooling-orchestrator
      dockerfile: dev.Dockerfile
    depends_on:
      - setup
    ports:
      - 3021:3021
    environment:
      - EXERCISM_ENV=development
      - EXERCISM_DOCKER=true
    volumes:
      - ../tooling-orchestrator:/usr/src/app

  tooling-invoker:
    image: exercism/tooling-invoker
    mem_limit: "250m"
    build:
      context: ../tooling-invoker
      dockerfile: dev.Dockerfile
    depends_on:
      - setup
      - tooling-orchestrator
    environment:
      - EXERCISM_ENV=development
      - EXERCISM_DOCKER=true
      - EXERCISM_INVOKE_STATEGY=local-webserver
    volumes:
      - ../tooling-invoker:/usr/src/app
      - "./tmp/exercism:/tmp/exercism"
      - /var/run/docker.sock:/var/run/docker.sock

  generic-tooling:
    image: exercism/generic-tooling-image
    entrypoint: ["echo", "Ready to run..."]
    build:
      context: ../generic-tooling-build-context
      dockerfile: Dockerfile
    volumes:
      - ../generic-tooling-source:/opt/generic-tooling-target

  adminer:
    image: adminer:4.8.1-standalone
    depends_on:
      - mysql
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - 8080:8080

  portainer:
    image: portainer/portainer-ce:2.9.2-alpine
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  elasticsearch:
    driver: local
